@use "@/utils/variables" as *;
@use "@/utils/functions" as *;
@use "@/utils/breakpoints" as *;
.container {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;

  .errorMessage {
    color: $danger;
    margin-bottom: rem(8);
  }
  .wrapper {
    display: flex;
    position: relative;
    align-items: center;
    height: rem(56);

    /* Hide the arrows for WebKit browsers */
    .input[type="number"]::-webkit-inner-spin-button,
    .input[type="number"]::-webkit-outer-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }

    /* Hide the arrows for Firefox */
    .input[type="number"] {
      -moz-appearance: textfield;
    }

    .input {
      display: flex;
      justify-content: center;
      align-items: center;
      border-radius: rem(40);
      background-color: $white-one;
      color: $black-four;
      height: rem(56);
      box-shadow: $shadow-two;
      text-align: center;
      border: none;
      outline: none;
      appearance: none;
      margin: 0 !important;
    }

    .input:focus {
      background-color: $white-one;
    }

    .arrows {
      position: absolute;
      right: 0 !important;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      height: 100%;
      width: rem(80);
      border-radius: rem(40);
      cursor: pointer;

      .arrow {
        background: none; 
        padding: 0; 
        margin: 0; 
        font: inherit; 
        cursor: pointer;
        outline: none; 
        box-shadow: none; 
        text-decoration: none; 
        color: inherit;
        border: none;
      }

      .upArrow {
        margin-bottom: rem(-4);
      }

      .downArrow {
        margin-top: rem(-4);
      }
    }
  }
}

@mixin option-width($width) {
  width: calc(#{$width} * 0.96);
}

.xxLarge {
  @include only(largeDesktop) {
    width: rem(1296);
    height: rem(56);
  }
}

.xxLarge .option {
  @include option-width(rem(1296));
}

.xxLargeFeed {
  width: rem(954);
  height: rem(56);
}

.xxLargeFeed .option {
  @include option-width(rem(954));
}

.xxLargeDashboard {
  @include only(largeDesktop) {
    width: rem(1002);
    height: rem(56);
  }
}

.xxLargeDashboard .option {
  @include option-width(rem(1002));
}

.xLarge {
  @include only(largeDesktop) {
    width: rem(1078);
    height: rem(56);
  }
}

.xLarge .option {
  @include option-width(rem(1078));
}

.xLargeFeed {
  width: rem(793);
  height: rem(56);
}

.xLargeFeed .option {
  @include option-width(rem(793));
}

.xLargeDashboard {
  @include only(largeDesktop) {
  }
}

// .xLargeDashboard .option {
//   @include option-width(rem(1002));
// }

.large {
  width: rem(311);

  @include only(largeDesktop) {
    width: rem(514);
  }
}

.large .option {
  @include option-width(rem(514));
}

.largeFeed {
  width: rem(471);
}

.largeFeed .option {
  @include option-width(rem(471));
}

.largeDashboard {
  width: rem(267);
  height: rem(56);
  @include only(largeDesktop) {
    width: rem(471);
  }
}

.largeDashboard .option {
  @include option-width(rem(267));
  @include only(largeDesktop) {
    @include option-width(rem(471));
  }
}

.medium {
  width: rem(202);
  height: rem(56);
  @include only(largeDesktop) {
    width: rem(424);
  }
}

.medium .option {
  @include option-width(rem(424));
}

.mediumFeed {
  width: rem(310);
  height: rem(48);
}

.mediumFeed .option {
  @include option-width(rem(310));
}

.mediumDashboard {
  @include only(largeDesktop) {
    width: rem(326);
    height: rem(48);
  }
}

.mediumDashboard .option {
  @include option-width(rem(471));
}

.primary {
  background-color: $primary;
}

.primary:hover {
  background-color: $primary-hover;
}

.primary:active {
  background-color: $primary-hover;
}
.primary:disabled {
  background-color: $primary-disabled;
}

.primary:focus {
  background-color: $primary;
  outline: $primary-hover;
}

.normal {
}

.normal:hover {
}
.normal:active {
}

.normal:focus {
  outline-style: solid !important;
  outline-color: $white-one !important;
  outline-width: rem(2) !important;
}

.outline {
}

.outline:hover {
  background-color: $primary;
}
.outline:active {
  background-color: $primary;
}
.outline:disabled {
  background-color: $primary;
}

.outline:focus {
  background-color: $primary;
}

.success {
  background-color: $success;
}

.success:hover {
  background-color: $primary;
}
.success:active {
  background-color: $primary;
}
.success:disabled {
  background-color: $primary;
}

.success:focus {
  background-color: $primary;
}

.warning {
  background-color: $warning;
}

.warning:hover {
  background-color: $primary;
}
.warning:active {
  background-color: $primary;
}
.warning:disabled {
  background-color: $primary;
}

.warning:focus {
  background-color: $primary;
}

.danger {
  background-color: $danger-hover;
}

.danger:hover {
  background-color: $danger-hover;
}
.danger:active {
  background-color: $danger-hover;
}
.danger:disabled {
  background-color: $danger-disabled;
}

.danger:focus {
  background-color: $danger;
}

.info {
  background-color: $info;
}

.info:hover {
  // background-color: $primary;
}
.info:active {
  background-color: $primary;
}
.info:disabled {
  background-color: $primary;
}

.info:focus {
  background-color: $primary;
}

.linkBtn {
  background-color: transparent;
  box-shadow: none;
}

.linkBtn:hover {
  background-color: $primary;
}
.linkBtn:active {
  background-color: $primary;
}
.linkBtn:disabled {
  background-color: $primary;
}

.linkBtn:focus {
  background-color: $primary;
}

.icon {
  background-color: unset;
  box-shadow: none;
}
